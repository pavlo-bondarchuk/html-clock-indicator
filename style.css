.theme-toggle {
    flex: 1 1 38px;
    position: relative;
    width: 38px;
    height: 38px;
    border-radius: 12px;
    background: var(--panel, var(--bg-1));
    border: 1px solid var(--border-color);
    align-self: stretch;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background .25s, border-color .25s, box-shadow .25s;
}

.theme-toggle:focus-within {
    box-shadow: var(--focus);
    outline: none;
}

.theme-toggle button {
    all: unset;
    width: 100%;
    min-width: 38px;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    cursor: pointer;
}

.theme-toggle .icon {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transform: scale(.6) rotate(-15deg);
    transition: .35s ease;
}

.theme-toggle[data-mode="light"] .icon.sun {
    opacity: 1;
    transform: scale(1) rotate(0);
}

.theme-toggle[data-mode="dark"] .icon.moon {
    opacity: 1;
    transform: scale(1) rotate(0);
}

.theme-toggle:hover {
    border-color: var(--accent);
}

.theme-toggle[data-mode="dark"] {
    background: var(--panel-2, var(--bg-1));
}

.theme-toggle[data-label]:hover::after {
    content: attr(data-label);
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translate(-50%, 8px);
    background: var(--panel, var(--bg-1));
    border: 1px solid var(--border-color);
    padding: 4px 8px;
}

.nixie-wrap {
    display: inline-block;
    width: var(--nixie-img-width);
    height: calc(var(--nixie-img-height) + 8px);
    /* room for underlight */
    margin: 0 2px;
    position: relative;
    opacity: var(--tube-opacity, 1);
    transition: opacity .22s linear;
}

.nixie-img {
    width: 100%;
    height: var(--nixie-img-height);
    object-fit: contain;
    display: block;
    -webkit-box-reflect: below 0px linear-gradient(to bottom, rgba(0, 0, 0, 0.0), rgba(0, 0, 0, 0.4));
    transition: opacity var(--nixie-transition-duration, 300ms) var(--nixie-transition-ease), transform var(--nixie-transition-duration, 300ms) var(--nixie-transition-ease);
}

.nixie-wrap::after {
    content: "";
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: 0px;
    width: calc(var(--nixie-img-width) * 0.9);
    height: calc(var(--nixie-img-height) * 0.18);
    border-radius: 50%;
    pointer-events: none;
    /* gradient stop follows glow intensity: at 100% the color fills the disc */
    background: radial-gradient(closest-side, var(--underlight-color, var(--led-color)) calc(var(--glow-intensity, 0) * 100%), transparent calc(var(--glow-intensity, 0) * 100%));
    /* JS stores --glow-intensity as a 0..1 eased value; use it to drive blur and opacity */
    filter: blur(calc(6px * var(--glow-intensity, 0)));
    opacity: var(--glow-intensity, 0);
}

/* Transition variants controlled via data attribute on root */
:root[data-transition="smooth"] .nixie-img {
    transform-origin: 50% 50%;
}

:root[data-transition="fade"] .nixie-img {
    transform: none;
}

:root[data-transition="slide"] .nixie-img {
    transform: translateY(6px);
}

/* If a digit is intentionally blank (leading zero hidden), remove its underlight */
.nixie-wrap.blank::after {
    opacity: 0 !important;
    filter: none !important;
    pointer-events: none;
}

.theme-select__panel {
    position: absolute;
    top: 0;
    left: 0;
    width: 38px;
    height: 38px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding-top: 0;
    gap: 0;
    border-radius: 12px;
    background: var(--panel, var(--bg-1));
    border: 1px solid var(--border-color);
    box-shadow: var(--shadow);
    transition: height .22s ease, transform .18s ease, opacity .18s ease;
    transform: scale(.9);
    opacity: 0;
    pointer-events: none;
    z-index: 60;
}

.theme-select.open .theme-select__panel {
    height: 72px;
    transform: scale(1);
    opacity: 1;
    pointer-events: auto;
}

.theme-opt {
    all: unset;
    width: 100%;
    height: 36px;
    display: flex;
    align-items: center;
    transition: opacity var(--nixie-transition-duration, 300ms) var(--nixie-transition-ease), transform var(--nixie-transition-duration, 300ms) var(--nixie-transition-ease);
    transform: translateY(0) scale(1);
    font-size: 18px;

    /* Transition behavior notes:
   JS will set inline transform values during swaps to create distinct
   'smooth' (subtle scale), 'fade' (opacity only), and 'slide'
   (translateY from below) effects. Keep transform-origin stable. */
    .nixie-img {
        transform-origin: 50% 50%;
    }

    background: var(--panel-2, var(--bg-1));
}

.theme-opt.active {
    background: linear-gradient(135deg, var(--accent-1), var(--accent-2));
    color: #fff;
}

.theme-opt.active .ico {
    filter: drop-shadow(0 0 2px rgba(0, 0, 0, .4));
}

.theme-opt.focus:not(.active) {
    background: var(--panel-2, var(--bg-1));
}

.theme-opt .ico {
    pointer-events: none;
}

.theme-opt svg {
    display: block;
}

/* Tooltip closed state */
.theme-select[data-label]:not(.open):hover::after {
    content: attr(data-label);
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translate(-50%, 8px);
    background: var(--panel, var(--bg-1));
    border: 1px solid var(--border-color);
    padding: 4px 8px;
    font-size: 11px;
    border-radius: 8px;
    color: var(--text);
    white-space: nowrap;
    box-shadow: 0 4px 14px rgba(0, 0, 0, .2);
    pointer-events: none;
    z-index: 100;
}

/* Remove old custom select artifacts */
@media (pointer: coarse) {
    .theme-toggle[data-label]:hover::after {
        display: none;
    }
}

@font-face {
    font-family: 'BernhardGothic';
    src: url('assets/BernhardGothicURW-ExtraLight.woff2') format('woff2');
    font-weight: 200;
    font-style: normal;
}

:root {
    --accent: #ff6600;
    --accent-1: #ff7a00;
    --accent-2: #ff3d00;
    --led-color: #ff6600;
    --underlight-color: #ff6600;
    /* sizing variables for nixie images and separators */
    --nixie-img-width: 60px;
    --nixie-img-height: 100px;
    --separator-width: 24px;
    --separator-dot-size: 8px;
    --separator-offset: 22px;
    --tube-brightness: .9;
    --radius: 16px;
    --focus: 0 0 0 2px rgba(255, 102, 0, .4);

    --bg-0: #fdfdfd;
    --bg-1: #f5f5f5;
    --panel: #ffffff;
    --panel-2: #f0f0f0;
    --text: #181818;
    --muted: #6b6b6b;
    --shadow: 0 8px 20px rgba(0, 0, 0, .08);
    --nixie-bg-image: url(assets/nixie-tube-light.png);
    --border-color: #e0e0e0;
    --topbar-bg: linear-gradient(180deg, rgba(255, 255, 255, .9), rgba(255, 255, 255, .7));
    --topbar-border: #e0e0e0;
    --switch-bg: #e0e0e0;
    --switch-bg-checked: linear-gradient(90deg, var(--accent-1), var(--accent-2));
    --switch-knob: #ffffff;
    --range-track: #e0e0e0;
    --select-arrow-color: #888;
    --topbar-h: 72px;
    /* clock card backgrounds (light/dark) */
    --clock-bg-light: #f8f6f2;
    --clock-text-light: #1a1a14;
    --clock-bg-dark: #0a0802;
    --clock-text-dark: #f5e8d6;
    /* clock card backgrounds (light/dark) */
    --clock-bg-light: #f8f6f2;
    --clock-text-light: #1a1a14;
    --clock-bg-dark: #0a0802;
    --clock-text-dark: #f5e8d6;
    /* transition for nixie digit changes */
    --nixie-transition-duration: 300ms;
    --nixie-transition-ease: cubic-bezier(.2, .9, .3, 1);
    --tube-opacity: 1;
}

[data-theme="dark"] {
    --bg-0: #0a0a0a;
    --bg-1: #121212;
    --panel: #181818;
    --panel-2: #1f1f1f;
    --text: #eaeaea;
    --muted: #9a9a9a;
    --shadow: 0 8px 20px rgba(0, 0, 0, .5);
    --nixie-bg-image: url(assets/nixie-tube-dark.png);
    --border-color: #2a2a2a;
    --topbar-bg: linear-gradient(180deg, rgba(18, 18, 18, .95), rgba(18, 18, 18, .75));
    --topbar-border: #1a1a1a;
    --switch-bg: #2a2a2a;
    --switch-bg-checked: linear-gradient(90deg, var(--accent-1), var(--accent-2));
    --switch-knob: linear-gradient(180deg, #f5f5f5, #dcdcdc);
    --range-track: #3a3a3a;
    --select-arrow-color: #aaa;
}

* {
    box-sizing: border-box;
    transition: background-color .2s ease, color .2s ease, border-color .2s ease;
}

html,
body {
    height: 100%;
    min-height: 100vh;
}

body {
    margin: 0;
    font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
    background: linear-gradient(to bottom, color-mix(in srgb, var(--accent) 12%, transparent), transparent 50%) no-repeat, var(--bg-0);
    color: var(--text);
    overflow-x: hidden;
}

.topbar {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: center;
    gap: 16px;
    padding: calc(10px + env(safe-area-inset-top)) 16px 12px;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: var(--topbar-bg);
    backdrop-filter: blur(8px) saturate(160%);
    -webkit-backdrop-filter: blur(8px) saturate(160%);
    border-bottom: 1px solid var(--topbar-border);
}

.brand {
    display: flex;
    align-items: center;
    gap: 10px
}

.logo-wrap {
    width: fit-content;
    height: 44px;
    overflow: hidden;
    border-radius: 10px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: transparent;
}

.brand-logo {
    width: 100%;
    height: 100%;
    display: block;
    object-fit: contain;
}

.brand-name {
    font-weight: 700;
    letter-spacing: .2px
}

@media (max-width:640px) {
    .brand-name {
        display: none;
    }

    .logo-wrap {
        width: 22px;
        height: 34px;
    }

    .brand-logo {
        object-position: left center;
        object-fit: cover;
    }
}

.top-controls {
    justify-self: end;
    display: flex;
    gap: 10px;
}

.top-controls .select-icon-wrap {
    display: flex;
    align-items: center;
    gap: 5px;
    position: relative;
}

.top-controls .select-icon-wrap .icon {
    position: absolute;
    left: 10px;
}

.top-controls .theme-icons {
    position: relative;
}

.top-controls .theme-icons[data-theme-label]:hover::after {
    content: attr(data-theme-label);
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translate(-50%, 6px);
    background: var(--panel, var(--bg-1));
    color: var(--text);
    font-size: 11px;
    padding: 4px 8px;
    border-radius: 8px;
    box-shadow: 0 4px 14px rgba(0, 0, 0, .18);
    white-space: nowrap;
    pointer-events: none;
    z-index: 50;
}

.top-controls select {
    color: var(--text);
    border: 1px solid var(--border-color);
    border-radius: 999px;
    padding: 10px 14px 10px 34px;
    outline: none;
    font-size: 14px;
    max-width: 100%;
}

.top-controls select:focus {
    box-shadow: var(--focus);
}

.topbar h1 {
    margin: 0;
    text-align: center;
    font-size: 18px;
    font-weight: 700
}

.container {
    max-width: 1180px;
    margin: calc(24px + var(--topbar-h)) auto 24px;
    padding: 0 16px;
    display: grid;
    gap: 20px
}

.card {
    background: var(--bg-1);
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    padding: 20px
}

.card-clock {
    padding: 12px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.temp-overlay {
    position: absolute;
    left: 50%;
    top: 18px;
    transform: translateX(-50%);
    background: transparent;
    color: var(--clock-text-light);
    font-size: 22px;
    font-weight: 700;
    pointer-events: none;
    text-shadow: 0 0 10px color-mix(in srgb, var(--accent) 60%, transparent);
    opacity: 0;
    transition: opacity .2s ease, transform .3s ease;
    z-index: 40;
}

.temp-overlay.show {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
}

/* Make the clock card match nixie lamp background */
.card.card-clock {
    background: var(--clock-bg-light);
    border: 1px solid color-mix(in srgb, var(--text) 6%, transparent);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06), inset 0 -6px 30px rgba(0, 0, 0, 0.04);
    color: var(--clock-text-light);
}

:root[data-theme="dark"] .card.card-clock {
    background: var(--clock-bg-dark);
    border: 1px solid rgba(255, 255, 255, 0.03);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.6), inset 0 -6px 30px rgba(0, 0, 0, 0.6);
    color: var(--clock-text-dark);
}

/* When temperature overlay is active, dim lamps and hide seconds/separators */
#nixie[data-show-temp="true"] {
    --tube-brightness: 0.25;
    /* dim overall */
}

#nixie[data-show-temp="true"] .nixie-img {
    /* dim most digits by default */
    filter: brightness(0.45) saturate(0.8);
}

#nixie[data-show-temp="true"] .nixie-wrap::after {
    opacity: 0.2 !important;
    /* reduce underlight for non-seconds */
    filter: blur(2px) !important;
}

/* Keep the seconds separator visible when showing temperature */

/* Prevent dimming of the seconds pair: make them appear bright and keep underlight */
#nixie[data-show-temp="true"] .sec-pair .nixie-img {
    filter: none !important;
    opacity: 1 !important;
}

#nixie[data-show-temp="true"] .sec-pair .nixie-wrap::after {
    opacity: 1 !important;
    filter: none !important;
}

.hint {
    color: var(--muted);
    font-size: 12px;
    margin: 0
}

.btn-primary {
    appearance: none;
    border: none;
    cursor: pointer;
    padding: 12px 18px;
    border-radius: 12px;
    background: linear-gradient(135deg, var(--accent-1), var(--accent-2));
    color: #fff;
    font-weight: 700;
    letter-spacing: .2px;
    box-shadow: 0 10px 24px rgba(255, 80, 0, .25), inset 0 0 0 1px rgba(255, 255, 255, .06);
    transition: transform .05s ease, filter .2s ease
}

.btn-primary:hover {
    filter: brightness(1.06)
}

.btn-primary:active {
    transform: translateY(1px)
}

.btn-ghost {
    background: transparent;
    color: var(--text);
    border: 1px solid var(--border-color);
    padding: 12px 16px;
    border-radius: 12px;
    cursor: pointer
}

.switch {
    position: relative;
    width: 56px;
    height: 32px;
    display: inline-block
}

.switch.small {
    width: 44px;
    height: 26px
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0
}

.slider {
    position: absolute;
    inset: 0;
    border-radius: 999px;
    background: var(--switch-bg);
    transition: .25s;
    box-shadow: inset 0 0 0 1px color-mix(in srgb, var(--border-color) 50%, transparent);
}

.slider:before {
    content: "";
    position: absolute;
    height: 24px;
    width: 24px;
    left: 4px;
    top: 4px;
    border-radius: 50%;
    background: var(--switch-knob);
    transition: .25s
}

.switch.small .slider:before {
    height: 18px;
    width: 18px;
    left: 4px;
    top: 4px
}

.switch input:checked+.slider {
    background: var(--switch-bg-checked);
    box-shadow: 0 0 0 1px rgba(255, 102, 0, .35), 0 6px 20px rgba(255, 64, 0, .25) inset
}

.switch input:checked+.slider:before {
    transform: translateX(24px);
    background: #fff
}

.switch.small input:checked+.slider:before {
    transform: translateX(18px)
}

input[type="text"],
input[type="password"],
input[type="date"],
input[type="time"],
input[type="number"],
select {
    appearance: none;
    width: 100%;
    background-color: var(--panel);
    color: var(--text);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 12px 14px;
    outline: none
}

/* Improve vertical centering of native checkmark in the option popup.
   Many browsers render the option list natively; this rule nudges
   option line-height and padding so the native checkmark aligns
   closer to the option text center on platforms that allow option styling. */
select option {
    /* provide a consistent clickable row height and center text */
    padding: 8px 14px;
    font-size: 14px;
    line-height: 20px;
    /* ~match the visual height so check appears centered */
    vertical-align: middle;
}

/* Slightly increase select control vertical padding to match option rows
   so the selected value visually aligns with items in the popup. */
select {
    padding-top: 10px;
    padding-bottom: 10px;
}

/* UTC select styling: use --accent for text, adapt to theme */
#tzSelect {
    border-radius: 12px;
    padding: 12px 14px;
    appearance: none;
    border: 1px solid color-mix(in srgb, var(--accent) 8%, transparent);
    background-color: var(--panel);
    color: var(--accent);
}

#tzSelect:focus {
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--accent) 12%, transparent);
}

input:focus,
select:focus {
    box-shadow: var(--focus);
    border-color: color-mix(in srgb, var(--text) 20%, transparent);
}

.password {
    display: flex;
    gap: 8px
}

.password .ghost {
    background: var(--panel-2);
    border: 1px solid var(--border-color);
    color: var(--text);
    border-radius: 10px;
    padding: 0 12px;
    font-size: 14px
}

.password .ghost:hover {
    filter: brightness(1.06)
}

.dash {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 18px
}

.block-header {
    display: flex;
    flex-direction: column;
    gap: 6px;
    margin-bottom: 32px;
}

.block-header h2 {
    margin: 0;
    font-size: 16px;
    font-weight: 700
}

.block-header .sub {
    margin: 0;
    color: var(--muted);
    font-size: 12px
}

.block-body {
    display: grid;
    gap: 12px
}

.block-body.two {
    grid-template-columns: 1fr 1fr 1fr;
}

/* Visual lift: nudge the second-row controls in Display & Lighting up a bit
   so they align with the left column group's rows like Time zone/DST/Separator */
#blk-light .block-body>.field:nth-child(4),
#blk-light .block-body>.field:nth-child(5) {
    transform: translateY(-6px);
}

.block-body .group+.group {
    margin-top: 28px;
    padding-top: 16px;
    border-top: 1px solid var(--border-color);
}

.group-title {
    margin: 0 0 6px;
    font-size: 13px;
    font-weight: 600;
    letter-spacing: .5px;
    text-transform: uppercase;
    color: var(--muted);
}

.block-body .group {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: 14px 18px;
}

.block-body .group .group-title {
    grid-column: 1 / -1;
}

.block-body .group .field {
    gap: 8px;
}

/* Prevent overflow from long labels/controls */
.block-body .group,
.block-body.two,
.field {
    min-width: 0;
}

.field input,
.field select,
.field .password {
    width: 100%;
    max-width: 100%;
    min-width: 0;
}

.field span {
    overflow-wrap: anywhere;
    word-break: break-word;
}

.field {
    display: flex;
    flex-direction: column;
    gap: 8px
}

#leadingZeroField {
    display: flex;
}

.block-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 8px
}

.block {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.block>.block-body {
    flex: 1 1 auto;
}

.block .block-actions {
    margin-top: auto;
    padding-top: 12px;
}

.btn-row {
    display: flex;
    gap: 10px
}

.footer-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    align-items: center
}

.toast {
    min-width: 80px;
    font-size: 13px;
    color: var(--muted)
}

.color-row {
    display: flex;
    align-items: center;
    gap: 10px
}

.color-row input[type="color"] {
    width: 48px;
    height: 36px;
    border-radius: 8px;
    border: 1px solid var(--border-color);
    background: var(--bg-1);
    padding: 0
}

/* Remove the default inner padding WebKit adds around the swatch so the
   swatch fills the control square (affects Safari/Chrome on macOS/iOS). */
input[type="color"]::-webkit-color-swatch-wrapper {
    padding: 0 !important;
}

/* Ensure the swatch itself doesn't add extra spacing */
input[type="color"]::-webkit-color-swatch {
    border-radius: 6px;
    border: none;
}

/* Firefox shadow element (limited support) */
input[type="color"]::-moz-color-swatch {
    padding: 0;
}

/* Specific override for the under-light picker to be extra safe */
#ledColor::-webkit-color-swatch-wrapper {
    padding: 0 !important;
}

#ledColor::-webkit-color-swatch {
    border-radius: 0;
    border: none;
}

/* Remove any outer padding on the specific under-light color control */
#ledColor {
    padding: 0 !important;
    box-sizing: border-box;
}

.muted {
    color: var(--muted);
    font-size: 12px
}

.separator {
    width: var(--separator-width);
    display: flex;
    flex-direction: column;
    align-items: center;
    /* set separator height to image height minus offset so dot aligns with digit bottom */
    height: calc(var(--nixie-img-height) - var(--separator-offset));
    justify-content: flex-end;
    gap: 8px;
}

.separator .dot {
    width: var(--separator-dot-size);
    height: var(--separator-dot-size);
    border-radius: 50%;
    /* explicit warm yellow similar to nixie glow */
    background: #ffcc33;
    box-shadow: 0 0 14px rgba(255, 204, 51, 0.55), 0 0 24px rgba(255, 170, 0, 0.15);
    filter: brightness(var(--tube-brightness));
    transition: opacity 180ms linear, transform 180ms linear
}

@keyframes blink {
    0% {
        opacity: 1;
        transform: translateY(0)
    }

    45% {
        opacity: .2;
        transform: translateY(-2px)
    }

    55% {
        opacity: .2;
        transform: translateY(-2px)
    }

    100% {
        opacity: 1;
        transform: translateY(0)
    }
}

.nixie {
    display: flex;
    align-items: center;
    gap: 18px;
    justify-content: center;
    padding: 12px 6px;
    border-radius: 18px;
    background: transparent;
    border: none;
    box-shadow: none;
    align-items: center;
    justify-content: center;
}

.sec-pair {
    display: none;
    gap: 12px;
}

.nixie[data-show-seconds="true"] .sec-pair {
    display: flex;
}

.digit {
    font-family: 'BernhardGothic', sans-serif;
    font-weight: 200;
    font-size: 110px;
    line-height: 1;
    color: var(--led-color);
    text-shadow: 0 0 8px color-mix(in srgb, var(--led-color) 80%, transparent), 0 0 20px color-mix(in srgb, var(--led-color) 50%, transparent), 0 0 50px color-mix(in srgb, var(--led-color) 20%, transparent);
    filter: brightness(var(--tube-brightness));
    transition: filter 220ms linear, opacity 220ms linear, text-shadow 220ms linear;
    position: relative;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    margin-bottom: -40px;
}

.nixie[data-separator="blinking"] .separator .dot {
    animation: blink 1s infinite ease-in-out;
}

.nixie[data-separator="static"] .separator .dot {
    opacity: 1;
    animation: none !important;
}

.nixie[data-separator="off"] .separator {
    animation: none !important;
}

.nixie[data-separator="off"] .separator .dot {
    opacity: 0;
    animation: none !important;
}

:root {
    --glow-intensity: 1;
    /* TEMP: force full glow for visual test */
}

.nixie .digit {
    filter: brightness(var(--tube-brightness)) drop-shadow(0 0 calc(2px + 46px * var(--glow-intensity)) var(--accent)) drop-shadow(0 0 calc(6px + 80px * var(--glow-intensity)) color-mix(in srgb, var(--accent) 65%, transparent));
    transition: filter .25s linear, text-shadow .25s linear;
}

.sep-sec {
    display: none
}

.nixie[data-show-seconds="true"] .sep-sec {
    display: flex
}

.date-line {
    margin-top: 10px;
    color: var(--muted);
    opacity: .85;
    font-weight: 600;
    letter-spacing: .3px
}

/* make date separators yellow like tube digits */
.date-sep .dot {
    width: var(--separator-dot-size);
    height: var(--separator-dot-size);
    border-radius: 50%;
    background: #ffcc33;
    box-shadow: 0 0 10px rgba(255, 204, 51, 0.5);
}

.footer {
    max-width: 1180px;
    margin: 32px auto 40px;
    padding: 24px 16px;
    color: var(--muted);
    font-size: 13px;
    text-align: center;
    opacity: .85;
}

/* Back to top button */
#backToTop {
    position: fixed;
    right: 16px;
    bottom: 20px;
    width: 40px;
    height: 40px;
    border-radius: 10px;
    border: 1px solid var(--border-color);
    background: var(--panel);
    color: var(--text);
    box-shadow: var(--shadow);
    display: grid;
    place-items: center;
    font-size: 18px;
    cursor: pointer;
    opacity: 0;
    transform: translateY(8px);
    pointer-events: none;
    transition: opacity .25s ease, transform .25s ease, background .2s, border-color .2s;
    z-index: 9999;
}

#backToTop:hover {
    border-color: var(--accent);
}

#backToTop.show {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
}

select {
    padding-right: 30px;
    background-image:
        linear-gradient(45deg, transparent 50%, var(--select-arrow-color) 50%),
        linear-gradient(135deg, var(--select-arrow-color) 50%, transparent 50%);
    background-position:
        calc(100% - 20px) center,
        calc(100% - 15px) center;
    background-size:
        5px 5px,
        5px 5px;
    background-repeat: no-repeat;
}

.top-controls select {
    padding-right: 30px;
    background-position:
        calc(100% - 18px) center,
        calc(100% - 13px) center;
}

#nixie-date {
    margin-top: 10px;
    display: none;
}

#nixie-date.visible {
    display: flex;
}

.date-sep {
    animation: none;
    gap: 8px;
}

.date-sep .dot {
    width: 6px;
    height: 6px;
    animation: none;
}

input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 8px;
    background: var(--range-track);
    border-radius: 5px;
    outline: none;
    transition: opacity .2s;
    background-image: linear-gradient(var(--accent), var(--accent));
    background-size: 0% 100%;
    background-repeat: no-repeat;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 20px;
    height: 20px;
    background: var(--accent);
    cursor: pointer;
    border-radius: 50%;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
}

input[type="range"]::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: var(--accent);
    cursor: pointer;
    border-radius: 50%;
}

input[type="range"]::-moz-range-track {
    width: 100%;
    height: 8px;
    cursor: pointer;
    background: #3a3a3a;
    border-radius: 5px;
}

:root[data-theme="dark"] #timeInput::-webkit-calendar-picker-indicator,
:root[data-theme="dark"] #dateInput::-webkit-calendar-picker-indicator,
:root[data-theme="dark"] #alarmTime::-webkit-calendar-picker-indicator,
:root[data-theme="dark"] #nightStart::-webkit-calendar-picker-indicator,
:root[data-theme="dark"] #nightEnd::-webkit-calendar-picker-indicator {
    filter: invert(1) brightness(1.2);
}

:root[data-theme="light"] #timeInput::-webkit-calendar-picker-indicator,
:root[data-theme="light"] #dateInput::-webkit-calendar-picker-indicator,
:root[data-theme="light"] #alarmTime::-webkit-calendar-picker-indicator,
:root[data-theme="light"] #nightStart::-webkit-calendar-picker-indicator,
:root[data-theme="light"] #nightEnd::-webkit-calendar-picker-indicator {
    filter: none;
}

#timeInput::-webkit-calendar-picker-indicator,
#dateInput::-webkit-calendar-picker-indicator,
#alarmTime::-webkit-calendar-picker-indicator,
#nightStart::-webkit-calendar-picker-indicator,
#nightEnd::-webkit-calendar-picker-indicator {
    cursor: pointer;
    opacity: .85;
    transition: opacity .2s;
}

#timeInput::-webkit-calendar-picker-indicator:hover,
#dateInput::-webkit-calendar-picker-indicator:hover,
#alarmTime::-webkit-calendar-picker-indicator:hover,
#nightStart::-webkit-calendar-picker-indicator:hover,
#nightEnd::-webkit-calendar-picker-indicator:hover {
    opacity: 1;
}

@media (max-width:980px) {
    .dash {
        grid-template-columns: 1fr
    }

    .topbar h1 {
        font-size: 16px;
    }
}

@media (max-width:720px) {
    .block-body.two {
        grid-template-columns: 1fr
    }
}

@media (max-width:640px) {
    .top-controls select {
        max-width: 60vw;
    }

    .nixie .separator {
        height: 30px;
        padding: 15px 0 0;
    }

    .nixie[data-show-seconds="true"] #secWrap {
        display: flex;
        justify-content: center;
        margin-top: 4px;
    }

    .nixie[data-show-seconds="true"] .sec-pair {
        gap: 11px 2px;
        justify-content: center;
        width: 100%;
        margin-top: 4px;
    }

    .nixie {
        flex-wrap: wrap;
        width: 100%;
        max-width: 320px;
        gap: 10px 2px;
    }

    .nixie .tube {
        flex: 0 0 calc(50% - 22px);
        display: flex;
        justify-content: center;
    }

    /* Year block: keep year digits inline on desktop, but arrange as 2x2 grid on small screens */
    .year-block {
        display: inline-flex;
        gap: 2px;
    }

    @media (max-width:640px) {
        .year-block {
            display: grid;
            grid-template-columns: repeat(2, minmax(0, 1fr));
            gap: 6px;
            width: calc(var(--nixie-img-width) * 2 + 8px);
            justify-items: center;
            margin-top: 6px;
        }

        .year-block .nixie-wrap {
            width: calc(var(--nixie-img-width));
        }
    }

    .nixie .separator {
        flex-direction: row;
        width: 100%;
        gap: 10px;
        justify-content: center;
    }

    .nixie .separator .dot {
        transform: none !important;
    }

    .nixie[data-show-seconds="true"] #secWrap {
        width: 100%;
        display: flex;
        justify-content: center;
        margin-top: 4px;
    }
}

@media (max-width:560px) {
    .block-body .group {
        grid-template-columns: 1fr 1fr;
        gap: 12px 14px;
    }
}

@media (max-width:420px) {
    .block-body .group {
        grid-template-columns: 1fr;
    }

    .footer-actions {
        flex-direction: column;
    }
}

/* iOS-like wheel picker styles */
.wheel-picker {
    position: fixed;
    inset: 0;
    display: none;
    align-items: flex-end;
    justify-content: center;
    z-index: 1200;
}

.wheel-picker.show {
    display: flex;
}

.wheel-backdrop {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.45);
}

.wheel-sheet {
    width: 100%;
    max-width: 720px;
    background: var(--panel);
    border-top-left-radius: 12px;
    border-top-right-radius: 12px;
    box-shadow: 0 -12px 30px rgba(0, 0, 0, 0.3);
    padding: 12px 12px 20px;
    transform: translateY(0);
}

.wheel-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 12px;
    margin-bottom: 8px;
}

.wheel-title {
    font-weight: 700;
}

.wheel-body {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 8px 0 0;
}

.wheel-column {
    width: 110px;
    height: 180px;
    overflow: hidden;
    border-radius: 8px;
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.02), transparent 30%);
    display: flex;
    align-items: center;
    justify-content: center;
}

.wheel-column ul {
    list-style: none;
    padding: 0;
    margin: 0;
    width: 100%;
    scroll-snap-type: y mandatory;
    overflow-y: scroll;
    height: 100%;
}

.wheel-column li {
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    scroll-snap-align: center;
    font-size: 20px;
    color: var(--text);
    padding: 4px 8px;
}

.wheel-sep {
    font-size: 22px;
    padding: 0 8px;
    color: var(--muted);
}

.wheel-column ul::-webkit-scrollbar {
    width: 6px;
}

.wheel-column ul::-webkit-scrollbar-thumb {
    background: color-mix(in srgb, var(--accent) 40%, transparent);
    border-radius: 6px;
}

.wheel-column li.selected {
    font-weight: 800;
    color: var(--accent);
}

.wheel-picker .wheel-column::after {
    content: "";
    position: absolute;
}

.wheel-picker .wheel-column {
    position: relative
}

.wheel-picker .wheel-column::before {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    height: 36px;
    top: calc(50% - 18px);
    border-top: 1px solid color-mix(in srgb, var(--text) 6%, transparent);
    border-bottom: 1px solid color-mix(in srgb, var(--text) 4%, transparent);
    pointer-events: none;
}

.wheel-ampm {
    width: 70px;
}